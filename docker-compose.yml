version: "3"
services:
  mongo-db:
    container_name: tl-mongo
    image: mongo
    restart: always
    volumes:
      - mongo-data:/data
    ports:
    - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}

  mysql:
    container_name: tl-mysql
    image: mysql/mysql-server:8.0
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Seoul
    volumes:
      - mysql-data:/var/lib/mysql
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
    ports:
      - '3306:3306'

  database-adminer:
    container_name: tl-db-adminer
    image: adminer:latest
    ports:
      - "18080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db-mysql
      - ADMINER_DESIGN=hydra
      - ADMINER_PLUGINS=tables-filter tinymce

  backend:
    container_name: tl-backend
    build: ./Two-leader-backend/
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://tl-mysql:3306/twoLeader
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update


  # frontend:
  #   container_name: frontend-react
  #   build: ./frontend
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend/:/frontend
  #     - ./frontend/node_modules/:/frontend/node_modules

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: tl-zookeeper  
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: tl-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1      
      KAFKA_CREATE_TOPICS: "Topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: tl-zookeeper:2181
    volumes:
      - /var/run/docker.sock
    depends_on:
      - zookeeper

volumes:
  mysql-data:
  mongo-data: